generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Flashcard {
  id     String @id @default(uuid())
  front  String
  back   String
  deckId String
  deck   Deck   @relation(fields: [deckId], references: [id], onDelete: Cascade)
}

model Deck {
  id     String      @id @default(uuid())
  name   String
  cards  Flashcard[]
  userId String
  User   User        @relation(fields: [userId], references: [id])
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id            String    @id @default(uuid())
  username      String?
  password_hash String
  sessions      Session[]
  decks         Deck[]
  accounts      Account[]
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime

  user User @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
